{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jahna\\\\OneDrive\\\\Desktop\\\\FullstackProjects\\\\ReactProject1\\\\project\\\\src\\\\datafetching.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// function DataFetch() {\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         const fetchMydata = async () => {\n//             const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n//             console.log(response.ok);\n//             const responseData = await response.json();\n//             setData(responseData);\n//             console.log(responseData);\n//         }\n//     })\n\n//     return (\n//         <div>\n//             <h1>Datafetching</h1>\n//             <table>\n//                 {data.map((dataItem, index) => \n//                 <tr>\n//                     <td>{dataItem.id}</td>\n//                     <td>{dataItem.body}</td>\n//                 </tr>)}\n//             </table>\n//         </div>\n//     );\n// }\n\n// export default DataFetch;\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Datafetch() {\n  _s();\n  // creating a state variable to assign response\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchMyData = async () => {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      console.log(response.ok);\n      const responseData = await response.json();\n      setData(responseData);\n      console.log(responseData);\n    };\n    fetchMyData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"UserId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((dataItem, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: dataItem.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dataItem.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dataItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dataItem.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Datafetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Datafetch;\nexport default Datafetch;\nvar _c;\n$RefreshReg$(_c, \"Datafetch\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Datafetch","_s","data","setData","fetchMyData","response","fetch","console","log","ok","responseData","json","children","fileName","_jsxFileName","lineNumber","columnNumber","scope","map","dataItem","index","id","userId","title","body","_c","$RefreshReg$"],"sources":["C:/Users/jahna/OneDrive/Desktop/FullstackProjects/ReactProject1/project/src/datafetching.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// function DataFetch() {\r\n//     const [data, setData] = useState([]);\r\n//     useEffect(() => {\r\n//         const fetchMydata = async () => {\r\n//             const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n//             console.log(response.ok);\r\n//             const responseData = await response.json();\r\n//             setData(responseData);\r\n//             console.log(responseData);\r\n//         }\r\n//     })\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Datafetching</h1>\r\n//             <table>\r\n//                 {data.map((dataItem, index) => \r\n//                 <tr>\r\n//                     <td>{dataItem.id}</td>\r\n//                     <td>{dataItem.body}</td>\r\n//                 </tr>)}\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default DataFetch;\r\n\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Datafetch(){\r\n\r\n    // creating a state variable to assign response\r\n    const [data, setData] = useState([]);\r\n \r\n    useEffect(() => {\r\n        const fetchMyData = async () => {\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n            console.log(response.ok);\r\n            const responseData = await response.json();\r\n            setData(responseData);\r\n            console.log(responseData);\r\n        }\r\n        fetchMyData();\r\n    })\r\n  \r\n    return (\r\n        <div>\r\n            <h1>Data Fetching</h1>\r\n            <table>\r\n            <thead>\r\n            <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">UserId</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Body</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map((dataItem,index) =>\r\n                        <tr>\r\n                            <td>{dataItem.id}</td>\r\n                            <td>{dataItem.userId}</td>\r\n                            <td>{dataItem.title}</td>\r\n                            <td>{dataItem.body}</td>\r\n                        </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Datafetch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}