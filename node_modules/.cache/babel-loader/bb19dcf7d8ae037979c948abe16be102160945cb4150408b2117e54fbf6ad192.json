{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n\n// function DataFetch() {\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         const fetchMydata = async () => {\n//             const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n//             console.log(response.ok);\n//             const responseData = await response.json();\n//             setData(responseData);\n//             console.log(responseData);\n//         }\n//     })\n\n//     return (\n//         <div>\n//             <h1>Datafetching</h1>\n//             <table>\n//                 {data.map((dataItem, index) => \n//                 <tr>\n//                     <td>{dataItem.id}</td>\n//                     <td>{dataItem.body}</td>\n//                 </tr>)}\n//             </table>\n//         </div>\n//     );\n// }\n\n// export default DataFetch;","map":{"version":3,"names":[],"sources":["C:/Users/jahna/OneDrive/Desktop/FullstackProjects/ReactProject1/project/src/datafetching.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// function DataFetch() {\r\n//     const [data, setData] = useState([]);\r\n//     useEffect(() => {\r\n//         const fetchMydata = async () => {\r\n//             const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n//             console.log(response.ok);\r\n//             const responseData = await response.json();\r\n//             setData(responseData);\r\n//             console.log(responseData);\r\n//         }\r\n//     })\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Datafetching</h1>\r\n//             <table>\r\n//                 {data.map((dataItem, index) => \r\n//                 <tr>\r\n//                     <td>{dataItem.id}</td>\r\n//                     <td>{dataItem.body}</td>\r\n//                 </tr>)}\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default DataFetch;\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}